name: Start SOCKS Access Pull Request
on:
  workflow_dispatch:
    inputs:
      issue_number:
        description: 'Issue Number'
        required: true
        default: 9999
      repository:
        description: 'Repository'
        required: true
        default: bill-test-org/t-lint
  # repository_dispatch:
  #   types: [start-socks-pr]

jobs:
  gather_inputs:
    runs-on: ubuntu-latest
    # if: github.event.client_payload.issue_number != ''
    outputs:
      email: ${{ fromJSON(steps.parse.outputs.payload).CORName }}
      type: ${{ fromJSON(steps.parse.outputs.payload).Your\ Name }}
      ssh_key: 'ssh-rsa ABCD1234 bill@aol.com' # TODO
    steps:
      - name: Get Token from Github App
        id: get_token
        uses: machine-learning-apps/actions-app-token@master
        with:
          APP_PEM: ${{ secrets.GH_APP_PEM }}
          APP_ID: ${{ secrets.GH_APP_ID }}

      - run: echo "repo = ${{ github.event.inputs.repository }}"

      - name: Run Issue form parser
        id: parse
        uses: omgitsbillryan/issue-forms-body-parser@doh_dist
        with:
          issue_id: ${{ github.event.inputs.issue_number }} #${{ github.event.client_payload.issue_number }}
          repository: ${{ github.event.inputs.repository }}
          separator: '###'
          github_token: ${{ steps.get_token.outputs.app_token }}
          label_marker_start: ">>"
          label_marker_end: ">>"

      # - name: Show some JSON
      #   run: |
      #     echo -e "${{ steps.parse.outputs.payload }}"

  start_pull_request:
    runs-on: ubuntu-latest
    needs: gather_inputs
    if: |
      needs.gather_inputs.outputs.email != '' &&
      needs.gather_inputs.outputs.type != '' &&
      needs.gather_inputs.outputs.ssh_key != ''
    steps:
      - name: Checkout The Github Repository
        uses: actions/checkout@v2

      - name: Debugging stuff
        run: echo "email=${{ needs.gather_inputs.outputs.email }}"

  #     - name: Update config.yml
  #       uses: mikefarah/yq@master
  #       with:
  #         cmd: yq e '.key_groups.${{ env.type }} += ["${{ env.email }}"]' --inplace ansible/global/config.yml
  #       env:
  #         email: ${{ github.event.client_payload.email }}
  #         type: ${{ github.event.client_payload.type }}

  #     - name: Create /authorized_keys SSH Key File
  #       uses: "finnp/create-file-action@master"
  #       env:
  #         FILE_NAME: "ansible/roles/dsva-config/files/authorized_keys/${{ github.event.client_payload.email }}"
  #         FILE_DATA: "${{ github.event.client_payload.ssh_key }}"

  #     - name: Create Pull Request
  #       id: cpr
  #       uses: peter-evans/create-pull-request@v3
  #       with:
  #         token: ${{ steps.get_token.outputs.app_token }}
  #         commit-message: New SOCKS ssh key
  #         branch: "socks-${{ steps.split.outputs._0 }}"
  #         title: "[Automated SOCKS Access] ${{ steps.split.outputs._0 }}"
  #         body: |
  #           An automated SOCKS Access Request

  #           - ${{ github.event.issue.html_url }}

  #           Triggered by: @${{ github.event.comment.user.login }} in [this comment](${{ github.event.comment.html_url }})